{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "REST API",
    "description": ""
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": ["http"],
  "paths": {
    "/api/v1/authors/": {
      "get": {
        "tags": ["Authors"],
        "description": "Get all authors",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": ["Authors"],
        "description": "Create a new author",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "first_name": {
                  "example": "any"
                },
                "last_name": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/api/v1/authors/{id}": {
      "get": {
        "tags": ["Authors"],
        "description": "Get author by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "tags": ["Authors"],
        "description": "Update author by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "first_name": {
                  "example": "any"
                },
                "last_name": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "patch": {
        "tags": ["Authors"],
        "description": "Partially update author by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "first_name": {
                  "example": "any"
                },
                "last_name": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": ["Authors"],
        "description": "Delete author by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },

    "/api/v1/books/search": {
      "get": {
        "tags": ["Books"],
        "summary": "Search for books",
        "description": "Search for books by title, ISBN, or author.",
        "parameters": [
          {
            "name": "title",
            "in": "query",
            "type": "string"
          },
          {
            "name": "isbn",
            "in": "query",
            "type": "string"
          },
          {
            "name": "author",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/books/": {
      "get": {
        "tags": ["Books"],
        "summary": "Get all books",
        "description": "Retrieve all books.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": ["Books"],
        "summary": "Create a new book",
        "description": "Create a new book with the provided details.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "example": "any"
                },
                "isbn": {
                  "example": "any"
                },
                "shelf_location": {
                  "example": "any"
                },
                "author_id": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/books/copies": {
      "get": {
        "tags": ["Books"],
        "summary": "Get all book copies",
        "description": "Retrieve all copies of books.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": ["Books"],
        "summary": "Create a new book copy",
        "description": "Create a new copy of a book with the provided book ID.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "book_id": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/books/{id}": {
      "get": {
        "tags": ["Books"],
        "summary": "Get a book by ID",
        "description": "Retrieve a book by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "tags": ["Books"],
        "summary": "Update a book by ID",
        "description": "Update a book's details by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "example": "any"
                },
                "isbn": {
                  "example": "any"
                },
                "shelf_location": {
                  "example": "any"
                },
                "author_id": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "patch": {
        "tags": ["Books"],
        "summary": "Partially update a book by ID",
        "description": "Partially update a book's details by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "example": "any"
                },
                "isbn": {
                  "example": "any"
                },
                "shelf_location": {
                  "example": "any"
                },
                "author_id": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": ["Books"],
        "summary": "Delete a book by ID",
        "description": "Delete a book by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/v1/books/copies/{id}": {
      "delete": {
        "tags": ["Books"],
        "summary": "Delete a book copy by ID",
        "description": "Delete a copy of a book by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },

    "/api/v1/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Get all users",
        "description": "Retrieve all users.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": ["Users"],
        "summary": "Create a new user",
        "description": "Create a new user with the provided details.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "first_name": {
                  "example": "any"
                },
                "last_name": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get a user by ID",
        "description": "Retrieve a user by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "tags": ["Users"],
        "summary": "Update a user by ID",
        "description": "Update a user's details by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "first_name": {
                  "example": "any"
                },
                "last_name": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "patch": {
        "tags": ["Users"],
        "summary": "Partially update a user by ID",
        "description": "Partially update a user's details by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "first_name": {
                  "example": "any"
                },
                "last_name": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Delete a user by ID",
        "description": "Delete a user by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },

    "/api/v1/borrowed-books/": {
      "get": {
        "tags": ["Borrowed Books"],
        "description": "Get information about borrowed books.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/borrowed-books/borrow-book": {
      "post": {
        "tags": ["Borrowed Books"],
        "description": "Borrow a book.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "copy_id": {
                  "example": "any"
                },
                "user_id": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/borrowed-books/return-book": {
      "post": {
        "tags": ["Borrowed Books"],
        "description": "Return a borrowed book.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "copy_id": {
                  "example": "any"
                },
                "user_id": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/borrowed-books/user-borrowed-books": {
      "get": {
        "tags": ["Borrowed Books"],
        "description": "Get the list of books borrowed by a user.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/borrowed-books/overed-due": {
      "get": {
        "tags": ["Borrowed Books"],
        "description": "Get information about overdue books.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/borrowed-books/library-borrowing-insights": {
      "get": {
        "tags": ["Borrowed Books"],
        "description": "Get insights into library borrowing.",
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "type": "string"
          },
          {
            "name": "end_date",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/borrowed-books/export-over-due-books-last-month": {
      "get": {
        "tags": ["Borrowed Books"],
        "description": "Export information about overdue books from last month.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/borrowed-books/export-borrow-books-proccess-last-month": {
      "get": {
        "tags": ["Borrowed Books"],
        "description": "Export information about the borrowing process of books from last month.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/borrowed-books/{id}": {
      "put": {
        "tags": ["Borrowed Books"],
        "description": "Update information about a borrowed book.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "return_date": {
                  "example": "any"
                },
                "due_date": {
                  "example": "any"
                },
                "checkout_date": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    }
  }
}
